//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.02.15 at 02:57:18 PM BRST 
//

package com.buscape.wrapper.result.type;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import com.google.gson.annotations.SerializedName;

/**
 * <p>
 * Java class for CommentType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="CommentType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="comment" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="positive" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="negative" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *       &lt;attribute name="totalUsefulInformation" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="totalUselessInformation" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="totalOutOfContext" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CommentType", propOrder = { "comment", "positive", "negative" })
public class CommentType implements Serializable {

	private final static long serialVersionUID = 1L;
	
	@XmlElement(required = true)
	@SerializedName("comment")
	protected String comment;
	
	@XmlElement(required = true)
	@SerializedName("positive")
	protected String positive;
	
	@XmlElement(required = true)
	@SerializedName("negative")
	protected String negative;
	
	@XmlAttribute(required = true)
	@SerializedName("totalusefulinformation")
	protected int totalUsefulInformation;
	
	@XmlAttribute(required = true)
	@SerializedName("totaluselessinformation")
	protected int totalUselessInformation;
	
	@XmlAttribute(required = true)
	@SerializedName("totaloutofcontext")
	protected int totalOutOfContext;

	/**
	 * Gets the value of the comment property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getComment() {
		return comment;
	}

	/**
	 * Sets the value of the comment property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setComment(String value) {
		this.comment = value;
	}

	/**
	 * Gets the value of the positive property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getPositive() {
		return positive;
	}

	/**
	 * Sets the value of the positive property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setPositive(String value) {
		this.positive = value;
	}

	/**
	 * Gets the value of the negative property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getNegative() {
		return negative;
	}

	/**
	 * Sets the value of the negative property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setNegative(String value) {
		this.negative = value;
	}

	/**
	 * Gets the value of the totalUsefulInformation property.
	 * 
	 */
	public int getTotalUsefulInformation() {
		return totalUsefulInformation;
	}

	/**
	 * Sets the value of the totalUsefulInformation property.
	 * 
	 */
	public void setTotalUsefulInformation(int value) {
		this.totalUsefulInformation = value;
	}

	/**
	 * Gets the value of the totalUselessInformation property.
	 * 
	 */
	public int getTotalUselessInformation() {
		return totalUselessInformation;
	}

	/**
	 * Sets the value of the totalUselessInformation property.
	 * 
	 */
	public void setTotalUselessInformation(int value) {
		this.totalUselessInformation = value;
	}

	/**
	 * Gets the value of the totalOutOfContext property.
	 * 
	 */
	public int getTotalOutOfContext() {
		return totalOutOfContext;
	}

	/**
	 * Sets the value of the totalOutOfContext property.
	 * 
	 */
	public void setTotalOutOfContext(int value) {
		this.totalOutOfContext = value;
	}

}
